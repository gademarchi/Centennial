<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tableLayoutPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>